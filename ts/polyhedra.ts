import { fraction } from './fraction';
import * as parse from './parse';

export function tetrahedron(scale: parse.Expr): parse.Plane[] {
    return [
        // [1/2, 1/2, 1/2] · x + -sqrt(2)*scale/8 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(1, 2)}, b: {op: "num", args: [], val: fraction(1, 2)}, c: {op: "num", args: [], val: fraction(1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 8)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [1/2, -1/2, -1/2] · x + -sqrt(2)*scale/8 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(1, 2)}, b: {op: "num", args: [], val: fraction(-1, 2)}, c: {op: "num", args: [], val: fraction(-1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 8)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [-1/2, -1/2, 1/2] · x + -sqrt(2)*scale/8 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-1, 2)}, b: {op: "num", args: [], val: fraction(-1, 2)}, c: {op: "num", args: [], val: fraction(1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 8)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [-1/2, 1/2, -1/2] · x + -sqrt(2)*scale/8 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-1, 2)}, b: {op: "num", args: [], val: fraction(1, 2)}, c: {op: "num", args: [], val: fraction(-1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 8)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}}
    ];
}

export function octahedron(scale: parse.Expr): parse.Plane[] {
    return [
        // [1/2, 1/2, 1/2] · x + -sqrt(2)*scale/4 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(1, 2)}, b: {op: "num", args: [], val: fraction(1, 2)}, c: {op: "num", args: [], val: fraction(1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [-1/2, 1/2, 1/2] · x + -sqrt(2)*scale/4 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-1, 2)}, b: {op: "num", args: [], val: fraction(1, 2)}, c: {op: "num", args: [], val: fraction(1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [-1/2, -1/2, 1/2] · x + -sqrt(2)*scale/4 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-1, 2)}, b: {op: "num", args: [], val: fraction(-1, 2)}, c: {op: "num", args: [], val: fraction(1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [1/2, -1/2, 1/2] · x + -sqrt(2)*scale/4 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(1, 2)}, b: {op: "num", args: [], val: fraction(-1, 2)}, c: {op: "num", args: [], val: fraction(1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [1/2, -1/2, -1/2] · x + -sqrt(2)*scale/4 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(1, 2)}, b: {op: "num", args: [], val: fraction(-1, 2)}, c: {op: "num", args: [], val: fraction(-1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [-1/2, -1/2, -1/2] · x + -sqrt(2)*scale/4 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-1, 2)}, b: {op: "num", args: [], val: fraction(-1, 2)}, c: {op: "num", args: [], val: fraction(-1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [-1/2, 1/2, -1/2] · x + -sqrt(2)*scale/4 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-1, 2)}, b: {op: "num", args: [], val: fraction(1, 2)}, c: {op: "num", args: [], val: fraction(-1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [1/2, 1/2, -1/2] · x + -sqrt(2)*scale/4 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(1, 2)}, b: {op: "num", args: [], val: fraction(1, 2)}, c: {op: "num", args: [], val: fraction(-1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}}
    ];
}

export function cube(scale: parse.Expr): parse.Plane[] {
    return [
        // [0, 1, 0] · x + -scale/2 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "num", args: [], val: fraction(1, 1)}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 2)}, scale]}},
        // [0, 0, 1] · x + -scale/2 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "num", args: [], val: fraction(1, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 2)}, scale]}},
        // [1, 0, 0] · x + -scale/2 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(1, 1)}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 2)}, scale]}},
        // [0, -1, 0] · x + -scale/2 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "num", args: [], val: fraction(-1, 1)}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 2)}, scale]}},
        // [-1, 0, 0] · x + -scale/2 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-1, 1)}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 2)}, scale]}},
        // [0, 0, -1] · x + -scale/2 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "num", args: [], val: fraction(-1, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 2)}, scale]}}
    ];
}

export function icosahedron(scale: parse.Expr): parse.Plane[] {
    return [
        // [0, 1/4 - sqrt(5)/4, 1/4 + sqrt(5)/4] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "+", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "+", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [1/2, -1/2, 1/2] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(1, 2)}, b: {op: "num", args: [], val: fraction(-1, 2)}, c: {op: "num", args: [], val: fraction(1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [1/4 + sqrt(5)/4, 0, -1/4 + sqrt(5)/4] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "+", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [1/2, 1/2, 1/2] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(1, 2)}, b: {op: "num", args: [], val: fraction(1, 2)}, c: {op: "num", args: [], val: fraction(1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [0, -1/4 + sqrt(5)/4, 1/4 + sqrt(5)/4] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "+", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "+", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [0, 1/4 - sqrt(5)/4, -sqrt(5)/4 - 1/4] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "+", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "+", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-1/2, -1/2, -1/2] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-1, 2)}, b: {op: "num", args: [], val: fraction(-1, 2)}, c: {op: "num", args: [], val: fraction(-1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-sqrt(5)/4 - 1/4, 0, 1/4 - sqrt(5)/4] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "+", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-1/2, 1/2, -1/2] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-1, 2)}, b: {op: "num", args: [], val: fraction(1, 2)}, c: {op: "num", args: [], val: fraction(-1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [0, -1/4 + sqrt(5)/4, -sqrt(5)/4 - 1/4] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "+", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "+", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-sqrt(5)/4 - 1/4, 0, -1/4 + sqrt(5)/4] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "+", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-1/2, -1/2, 1/2] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-1, 2)}, b: {op: "num", args: [], val: fraction(-1, 2)}, c: {op: "num", args: [], val: fraction(1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [1/4 - sqrt(5)/4, -sqrt(5)/4 - 1/4, 0] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "+", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-1/4 + sqrt(5)/4, -sqrt(5)/4 - 1/4, 0] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "+", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [1/2, -1/2, -1/2] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(1, 2)}, b: {op: "num", args: [], val: fraction(-1, 2)}, c: {op: "num", args: [], val: fraction(-1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [1/4 + sqrt(5)/4, 0, 1/4 - sqrt(5)/4] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "+", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [1/2, 1/2, -1/2] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(1, 2)}, b: {op: "num", args: [], val: fraction(1, 2)}, c: {op: "num", args: [], val: fraction(-1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-1/4 + sqrt(5)/4, 1/4 + sqrt(5)/4, 0] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "+", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [1/4 - sqrt(5)/4, 1/4 + sqrt(5)/4, 0] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "+", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-1/2, 1/2, 1/2] · x + scale*(-3 - sqrt(5))/8 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-1, 2)}, b: {op: "num", args: [], val: fraction(1, 2)}, c: {op: "num", args: [], val: fraction(1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 8)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-3, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}}
    ];
}

export function dodecahedron(scale: parse.Expr): parse.Plane[] {
    return [
        // [1/2, 0, 1/4 + sqrt(5)/4] · x + scale*(-sqrt(5) - 2)/4 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(1, 2)}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "+", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [0, 1/4 + sqrt(5)/4, 1/2] · x + scale*(-sqrt(5) - 2)/4 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "+", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "num", args: [], val: fraction(1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-1/2, 0, 1/4 + sqrt(5)/4] · x + scale*(-sqrt(5) - 2)/4 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-1, 2)}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "+", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-sqrt(5)/4 - 1/4, 1/2, 0] · x + scale*(-sqrt(5) - 2)/4 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "num", args: [], val: fraction(1, 2)}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-1/2, 0, -sqrt(5)/4 - 1/4] · x + scale*(-sqrt(5) - 2)/4 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-1, 2)}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "+", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-sqrt(5)/4 - 1/4, -1/2, 0] · x + scale*(-sqrt(5) - 2)/4 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "num", args: [], val: fraction(-1, 2)}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [0, -sqrt(5)/4 - 1/4, -1/2] · x + scale*(-sqrt(5) - 2)/4 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "+", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "num", args: [], val: fraction(-1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [1/4 + sqrt(5)/4, -1/2, 0] · x + scale*(-sqrt(5) - 2)/4 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "num", args: [], val: fraction(-1, 2)}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [0, -sqrt(5)/4 - 1/4, 1/2] · x + scale*(-sqrt(5) - 2)/4 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "+", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "num", args: [], val: fraction(1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [0, 1/4 + sqrt(5)/4, -1/2] · x + scale*(-sqrt(5) - 2)/4 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "+", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "num", args: [], val: fraction(-1, 2)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [1/4 + sqrt(5)/4, 1/2, 0] · x + scale*(-sqrt(5) - 2)/4 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "num", args: [], val: fraction(1, 2)}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [1/2, 0, -sqrt(5)/4 - 1/4] · x + scale*(-sqrt(5) - 2)/4 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(1, 2)}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "+", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 4)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(1, 4)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-1, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}}
    ];
}

export function rhombicDodecahedron(scale: parse.Expr): parse.Plane[] {
    return [
        // [9/16, 0, 9/16] · x + -27*sqrt(2)*scale/64 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(9, 16)}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "num", args: [], val: fraction(9, 16)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-27, 64)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [9/16, 9/16, 0] · x + -27*sqrt(2)*scale/64 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(9, 16)}, b: {op: "num", args: [], val: fraction(9, 16)}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-27, 64)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [0, 9/16, 9/16] · x + -27*sqrt(2)*scale/64 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "num", args: [], val: fraction(9, 16)}, c: {op: "num", args: [], val: fraction(9, 16)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-27, 64)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [9/16, 0, -9/16] · x + -27*sqrt(2)*scale/64 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(9, 16)}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "num", args: [], val: fraction(-9, 16)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-27, 64)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [9/16, -9/16, 0] · x + -27*sqrt(2)*scale/64 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(9, 16)}, b: {op: "num", args: [], val: fraction(-9, 16)}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-27, 64)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [0, -9/16, -9/16] · x + -27*sqrt(2)*scale/64 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "num", args: [], val: fraction(-9, 16)}, c: {op: "num", args: [], val: fraction(-9, 16)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-27, 64)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [-9/16, 0, -9/16] · x + -27*sqrt(2)*scale/64 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-9, 16)}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "num", args: [], val: fraction(-9, 16)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-27, 64)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [-9/16, 9/16, 0] · x + -27*sqrt(2)*scale/64 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-9, 16)}, b: {op: "num", args: [], val: fraction(9, 16)}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-27, 64)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [0, 9/16, -9/16] · x + -27*sqrt(2)*scale/64 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "num", args: [], val: fraction(9, 16)}, c: {op: "num", args: [], val: fraction(-9, 16)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-27, 64)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [-9/16, 0, 9/16] · x + -27*sqrt(2)*scale/64 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-9, 16)}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "num", args: [], val: fraction(9, 16)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-27, 64)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [-9/16, -9/16, 0] · x + -27*sqrt(2)*scale/64 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-9, 16)}, b: {op: "num", args: [], val: fraction(-9, 16)}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-27, 64)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}},
        // [0, -9/16, 9/16] · x + -27*sqrt(2)*scale/64 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "num", args: [], val: fraction(-9, 16)}, c: {op: "num", args: [], val: fraction(9, 16)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(-27, 64)}, {op: "*", args: [scale, {op: "sqrt", args: [{op: "num", args: [], val: fraction(2, 1)}]}]}]}}
    ];
}

export function rhombicTriacontahedron(scale: parse.Expr): parse.Plane[] {
    return [
        // [0, 0, 5/16 + 5*sqrt(5)/16] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "+", args: [{op: "num", args: [], val: fraction(5, 16)}, {op: "*", args: [{op: "num", args: [], val: fraction(5, 16)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [5/16, -5*sqrt(5)/32 - 5/32, (sqrt(5) + 5)**2/64] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(5, 16)}, b: {op: "+", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "*", args: [{op: "num", args: [], val: fraction(1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [(sqrt(5) + 5)**2/64, -5/16, 5/32 + 5*sqrt(5)/32] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "*", args: [{op: "num", args: [], val: fraction(1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, b: {op: "num", args: [], val: fraction(-5, 16)}, c: {op: "+", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [5/16, 5/32 + 5*sqrt(5)/32, -(sqrt(5) + 5)**2/64] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(5, 16)}, b: {op: "+", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [(sqrt(5) + 5)**2/64, 5/16, -5*sqrt(5)/32 - 5/32] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "*", args: [{op: "num", args: [], val: fraction(1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, b: {op: "num", args: [], val: fraction(5, 16)}, c: {op: "+", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [(sqrt(5) + 5)**2/64, -5/16, -5*sqrt(5)/32 - 5/32] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "*", args: [{op: "num", args: [], val: fraction(1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, b: {op: "num", args: [], val: fraction(-5, 16)}, c: {op: "+", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-(sqrt(5) + 5)**2/64, 5/16, 5/32 + 5*sqrt(5)/32] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, b: {op: "num", args: [], val: fraction(5, 16)}, c: {op: "+", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-(sqrt(5) + 5)**2/64, -5/16, 5/32 + 5*sqrt(5)/32] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, b: {op: "num", args: [], val: fraction(-5, 16)}, c: {op: "+", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-5/16, -5*sqrt(5)/32 - 5/32, (sqrt(5) + 5)**2/64] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-5, 16)}, b: {op: "+", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "*", args: [{op: "num", args: [], val: fraction(1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-(sqrt(5) + 5)**2/64, 5/16, -5*sqrt(5)/32 - 5/32] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, b: {op: "num", args: [], val: fraction(5, 16)}, c: {op: "+", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-5/16, 5/32 + 5*sqrt(5)/32, -(sqrt(5) + 5)**2/64] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-5, 16)}, b: {op: "+", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [0, 0, -5*sqrt(5)/16 - 5/16] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "+", args: [{op: "num", args: [], val: fraction(-5, 16)}, {op: "*", args: [{op: "num", args: [], val: fraction(-5, 16)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [5/32 + 5*sqrt(5)/32, (sqrt(5) + 5)**2/64, 5/16] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "*", args: [{op: "num", args: [], val: fraction(1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, c: {op: "num", args: [], val: fraction(5, 16)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [(sqrt(5) + 5)**2/64, 5/16, 5/32 + 5*sqrt(5)/32] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "*", args: [{op: "num", args: [], val: fraction(1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, b: {op: "num", args: [], val: fraction(5, 16)}, c: {op: "+", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [5/16 + 5*sqrt(5)/16, 0, 0] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(5, 16)}, {op: "*", args: [{op: "num", args: [], val: fraction(5, 16)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-5*sqrt(5)/16 - 5/16, 0, 0] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(-5, 16)}, {op: "*", args: [{op: "num", args: [], val: fraction(-5, 16)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "num", args: [], val: fraction(0, 1)}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-(sqrt(5) + 5)**2/64, -5/16, -5*sqrt(5)/32 - 5/32] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, b: {op: "num", args: [], val: fraction(-5, 16)}, c: {op: "+", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-5*sqrt(5)/32 - 5/32, -(sqrt(5) + 5)**2/64, -5/16] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, c: {op: "num", args: [], val: fraction(-5, 16)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-5*sqrt(5)/32 - 5/32, (sqrt(5) + 5)**2/64, 5/16] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "*", args: [{op: "num", args: [], val: fraction(1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, c: {op: "num", args: [], val: fraction(5, 16)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-5/16, 5/32 + 5*sqrt(5)/32, (sqrt(5) + 5)**2/64] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-5, 16)}, b: {op: "+", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "*", args: [{op: "num", args: [], val: fraction(1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [5/16, 5/32 + 5*sqrt(5)/32, (sqrt(5) + 5)**2/64] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(5, 16)}, b: {op: "+", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "*", args: [{op: "num", args: [], val: fraction(1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-5*sqrt(5)/32 - 5/32, (sqrt(5) + 5)**2/64, -5/16] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "*", args: [{op: "num", args: [], val: fraction(1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, c: {op: "num", args: [], val: fraction(-5, 16)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [0, 5/16 + 5*sqrt(5)/16, 0] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "+", args: [{op: "num", args: [], val: fraction(5, 16)}, {op: "*", args: [{op: "num", args: [], val: fraction(5, 16)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [5/32 + 5*sqrt(5)/32, (sqrt(5) + 5)**2/64, -5/16] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "*", args: [{op: "num", args: [], val: fraction(1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, c: {op: "num", args: [], val: fraction(-5, 16)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-5*sqrt(5)/32 - 5/32, -(sqrt(5) + 5)**2/64, 5/16] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, c: {op: "num", args: [], val: fraction(5, 16)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [0, -5*sqrt(5)/16 - 5/16, 0] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(0, 1)}, b: {op: "+", args: [{op: "num", args: [], val: fraction(-5, 16)}, {op: "*", args: [{op: "num", args: [], val: fraction(-5, 16)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "num", args: [], val: fraction(0, 1)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [5/32 + 5*sqrt(5)/32, -(sqrt(5) + 5)**2/64, 5/16] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, c: {op: "num", args: [], val: fraction(5, 16)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [-5/16, -5*sqrt(5)/32 - 5/32, -(sqrt(5) + 5)**2/64] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(-5, 16)}, b: {op: "+", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [5/16, -5*sqrt(5)/32 - 5/32, -(sqrt(5) + 5)**2/64] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "num", args: [], val: fraction(5, 16)}, b: {op: "+", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(-5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, c: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}},
        // [5/32 + 5*sqrt(5)/32, -(sqrt(5) + 5)**2/64, -5/16] · x + 5*scale*(-5 - 2*sqrt(5))/32 = 0
        {tag: "plane", a: {op: "+", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}, b: {op: "*", args: [{op: "num", args: [], val: fraction(-1, 64)}, {op: "*", args: [{op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}, {op: "+", args: [{op: "num", args: [], val: fraction(5, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}, c: {op: "num", args: [], val: fraction(-5, 16)}, d: {op: "*", args: [{op: "num", args: [], val: fraction(5, 32)}, {op: "*", args: [scale, {op: "+", args: [{op: "num", args: [], val: fraction(-5, 1)}, {op: "*", args: [{op: "num", args: [], val: fraction(-2, 1)}, {op: "sqrt", args: [{op: "num", args: [], val: fraction(5, 1)}]}]}]}]}]}}
    ];
}

